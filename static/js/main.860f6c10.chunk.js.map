{"version":3,"sources":["components/Informatsion.js","components/Work.js","components/Studies.js","components/UserInput.js","components/PreviewCV.js","components/Display.js","components/App.js","index.js"],"names":["Informatsion","props","information","map","item","index","firstNameId","lastNameId","emailId","telId","linkedinId","githubId","bioId","className","id","type","name","data-id","defaultValue","firstName","placeholder","required","lastName","email","tel","linkedin","github","bio","Work","work","positionId","companyId","jobDescriptionId","startDateId","endDateId","position","company","jobDescription","startDate","endDate","Studies","studies","schoolNameId","studyAreaId","schoolStartDateId","schoolEndDateId","schoolName","studyArea","schoolStartDate","schoolEndDate","UserInput","handleChange","e","includes","target","state","dataset","value","setState","addWork","prevState","addStudies","onTrigger","event","parentCallback","twoCalls","this","onChange","onClick","Component","PreviewCV","generatePDF","jsPDF","html","document","querySelector","callback","pdf","save","data","toChild","infoObj","workArr","studiesArr","console","log","Object","keys","key","Display","handleCallback","childData","isFinished","PreviewButton","EditButton","App","handlePreviewClick","bind","handleEditClick","button","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.860f6c10.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/UserInput.css\";\n\nfunction Informatsion(props) {\n  return props.information.map((item, index) => {\n    let firstNameId = `firstName ${index}`,\n      lastNameId = `lastName ${index}`,\n      emailId = `email ${index}`,\n      telId = `tel ${index}`,\n      linkedinId = `linkedin ${index}`,\n      githubId = `github ${index}`,\n      bioId = `${index}`;\n\n    return (\n      <div className=\"information\" key={index}>\n        <h1>Personal Information</h1>\n        <div id=\"firstName\">\n          <input\n            type=\"text\"\n            name={firstNameId}\n            data-id={index}\n            id={firstNameId}\n            defaultValue={props.information[index].firstName}\n            className=\"firstName\"\n            placeholder=\"Name\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name={lastNameId}\n            data-id={index}\n            id={lastNameId}\n            defaultValue={props.information[index].lastName}\n            className=\"lastName\"\n            placeholder=\"Last name\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            name={emailId}\n            data-id={index}\n            id={emailId}\n            defaultValue={props.information[index].email}\n            className=\"email\"\n            type=\"email\"\n            placeholder=\"e.g. something@someone.com\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"tel\"\n            name={telId}\n            data-id={index}\n            id={telId}\n            defaultValue={props.information[index].tel}\n            className=\"tel\"\n            placeholder=\"Phone number\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name={linkedinId}\n            data-id={index}\n            id={linkedinId}\n            defaultValue={props.information[index].linkedin}\n            className=\"linkedin\"\n            placeholder=\"Your LinkedIn here\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name={githubId}\n            data-id={index}\n            id={githubId}\n            defaultValue={props.information[index].github}\n            className=\"github\"\n            placeholder=\"Your GitHub here\"\n          />\n        </div>\n        <div>\n          <textarea\n            name={bioId}\n            data-id={index}\n            id={bioId}\n            defaultValue={props.information[index].bio}\n            className=\"bio\"\n            placeholder=\"Talk about yourself a bit\"\n          />\n        </div>\n        <div className=\"space\"></div>\n      </div>\n    );\n  });\n}\n\nexport default Informatsion;\n","import React from \"react\";\nimport \"../styles/UserInput.css\";\n\nconst Work = (props) => {\n  return props.work.map((item, index) => {\n    let positionId = `position-${index}`,\n      companyId = `company-${index}`,\n      jobDescriptionId = `jobDescription-${index}`,\n      startDateId = `startDate-${index}`,\n      endDateId = `endDate-${index}`;\n\n    return (\n      <div key={index}>\n        <div>\n          <input\n            type=\"text\"\n            name={positionId}\n            data-id={index}\n            id={positionId}\n            defaultValue={props.work[index].position}\n            className=\"position\"\n            placeholder=\"Your position here\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name={companyId}\n            data-id={index}\n            id={companyId}\n            defaultValue={props.work[index].company}\n            className=\"company\"\n            placeholder=\"Company name here\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name={jobDescriptionId}\n            data-id={index}\n            id={jobDescriptionId}\n            defaultValue={props.work[index].jobDescription}\n            className=\"jobDescription\"\n            placeholder=\"Job description(Optional)\"\n          />\n        </div>\n        <div>\n          <input\n            name={startDateId}\n            data-id={index}\n            id={startDateId}\n            defaultValue={props.work[index].startDate}\n            className=\"startDate\"\n            type=\"date\"\n          ></input>\n        </div>\n        <div>\n          <input\n            name={endDateId}\n            data-id={index}\n            id={endDateId}\n            defaultValue={props.work[index].endDate}\n            className=\"endDate\"\n            type=\"date\"\n          ></input>\n        </div>\n        <div className=\"space\"></div>\n      </div>\n    );\n  });\n};\n\nexport default Work;\n","import React from \"react\";\nimport \"../styles/UserInput.css\";\n\nfunction Studies(props) {\n  return props.studies.map((item, index) => {\n    let schoolNameId = `School Name No ${index}`,\n      studyAreaId = `Study Area No ${index}`,\n      schoolStartDateId = `School start date no ${index}`,\n      schoolEndDateId = `School end date ${index}`;\n\n    return (\n      <div key={index}>\n        <div>\n          <input\n            type=\"text\"\n            name={schoolNameId}\n            data-id={index}\n            id={schoolNameId}\n            defaultValue={props.studies[index].schoolName}\n            className=\"schoolName\"\n            placeholder=\"School name here\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name={studyAreaId}\n            data-id={index}\n            id={studyAreaId}\n            defaultValue={props.studies[index].studyArea}\n            className=\"studyArea\"\n            placeholder=\"Study area\"\n          />\n        </div>\n        <div>\n          <input\n            type=\"date\"\n            name={schoolStartDateId}\n            data-id={index}\n            id={schoolStartDateId}\n            defaultValue={props.studies[index].schoolStartDate}\n            className=\"schoolStartDate\"\n          ></input>\n        </div>\n        <div>\n          <input\n            type=\"date\"\n            name={schoolEndDateId}\n            data-id={index}\n            id={schoolEndDateId}\n            defaultValue={props.studies[index].schoolEndDate}\n            className=\"schoolEndDate\"\n          ></input>\n        </div>\n        <div className=\"space\"></div>\n      </div>\n    );\n  });\n}\n\nexport default Studies;\n","import React, { Component } from \"react\";\nimport Informatsion from \"./Informatsion\";\nimport Work from \"./Work\";\nimport Studies from \"./Studies\";\nimport \"../styles/UserInput.css\";\n\nclass UserInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      information: [\n        {\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          tel: \"\",\n          linkedin: \"\",\n          github: \"\",\n          bio: \"\",\n        },\n      ],\n      work: [\n        {\n          position: \"\",\n          company: \"\",\n          jobDescription: \"\",\n          startDate: \"\",\n          endDate: \"\",\n        },\n      ],\n      studies: [\n        {\n          schoolName: \"\",\n          studyArea: \"\",\n          schoolStartDate: \"\",\n          schoolEndDate: \"\",\n        },\n      ],\n    };\n  }\n\n  handleChange = (e) => {\n    if (\n      [\n        \"position\",\n        \"company\",\n        \"jobDescription\",\n        \"startDate\",\n        \"endDate\",\n      ].includes(e.target.className)\n    ) {\n      let work = [...this.state.work];\n      work[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({ work });\n    } else if (\n      [\"schoolName\", \"studyArea\", \"schoolStartDate\", \"schoolEndDate\"].includes(\n        e.target.className\n      )\n    ) {\n      let studies = [...this.state.studies];\n      studies[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({ studies });\n    } else if (\n      [\n        \"firstName\",\n        \"lastName\",\n        \"email\",\n        \"tel\",\n        \"linkedin\",\n        \"github\",\n        \"bio\",\n      ].includes(e.target.className)\n    ) {\n      let information = [...this.state.information];\n      information[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState({ information });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  };\n\n  addWork = (e) => {\n    this.setState((prevState) => ({\n      work: [\n        ...prevState.work,\n        {\n          position: \"\",\n          company: \"\",\n          jobDescription: \"\",\n          startDate: \"\",\n          endDate: \"\",\n        },\n      ],\n    }));\n  };\n  addStudies = (e) => {\n    this.setState((prevState) => ({\n      studies: [\n        ...prevState.studies,\n        {\n          schoolName: \"\",\n          studyArea: \"\",\n          schoolStartDate: \"\",\n          schoolEndDate: \"\",\n        },\n      ],\n    }));\n  };\n  onTrigger = (event) => {\n    this.props.parentCallback(this.state);\n  };\n  twoCalls = (e) => {\n    this.onTrigger(e);\n    this.handleChange(e);\n    // console.log(this.state);\n  };\n\n  render() {\n    let { work } = this.state;\n    let { studies } = this.state;\n    let { information } = this.state;\n    return (\n      <div className=\"input\" onChange={this.twoCalls}>\n        <Informatsion information={information} />\n        <h1>Experience</h1>\n        <Work work={work} />\n        <button className=\"button\" onClick={this.addWork}>\n          Add work experience\n        </button>\n\n        <h1>Education</h1>\n        <Studies studies={studies} />\n        <button className=\"button\" onClick={this.addStudies}>\n          Add education\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default UserInput;\n","import React, { Component } from \"react\";\nimport UserInput from \"./UserInput\";\nimport jsPDF from \"jspdf\";\nimport \"../styles/PreviewCV.css\";\n\nclass PreviewCV extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.toChild,\n    };\n  }\n  generatePDF = () => {\n    let doc = new jsPDF(\"p\", \"pt\", \"a4\");\n    doc.html(document.querySelector(\"#content\"), {\n      callback: function (pdf) {\n        pdf.save(\"mypdf.pdf\");\n      },\n    });\n  };\n\n  render() {\n    const { data } = this.state;\n    //information as object\n    const infoObj = data.information[0];\n    //work as array\n    const workArr = data.work;\n    //studies array\n    const studiesArr = data.studies;\n    console.log(workArr);\n    console.log(data);\n    return (\n      <div>\n        <div id=\"content\">\n          <h3>Personal Information</h3>\n          <section className=\"previews\">\n            {Object.keys(infoObj).map((key, index) => (\n              <p key={index}>{infoObj[key]}</p>\n            ))}\n            <div className=\"space\"></div>\n          </section>\n          <h3>Experience</h3>\n          <section className=\"previews\">\n            {workArr.map((item) =>\n              Object.keys(item).map((key, index) => (\n                <p key={index}>{item[key]}</p>\n              ))\n            )}\n            <div className=\"space\"></div>\n          </section>\n          <section>\n            <h3>Studies</h3>\n            {studiesArr.map((item) =>\n              Object.keys(item).map((key, index) => (\n                <p key={index}>{item[key]}</p>\n              ))\n            )}\n            <div className=\"space\"></div>\n          </section>\n        </div>\n        <button onClick={this.generatePDF} type=\"primary\">\n          Generate PDF\n        </button>\n      </div>\n    );\n  }\n}\nexport default PreviewCV;\n","import React, { Component } from \"react\";\nimport UserInput from \"./UserInput\";\nimport PreviewCV from \"./PreviewCV\";\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: null,\n    };\n  }\n  handleCallback = (childData) => {\n    this.setState({ data: childData });\n  };\n  render() {\n    const { data } = this.state;\n    const isFinished = this.props.isFinished;\n    if (isFinished) {\n      return <PreviewCV toChild={data} />;\n    }\n    return <UserInput parentCallback={this.handleCallback} />;\n  }\n}\n\nexport default Display;\n","import React, { Component } from \"react\";\nimport Display from \"./Display\";\nimport \"../styles/UserInput.css\";\n\nfunction PreviewButton(props) {\n  return (\n    <button className=\"preview\" onClick={props.onClick}>\n      Preview\n    </button>\n  );\n}\nfunction EditButton(props) {\n  return (\n    <button className=\"preview\" onClick={props.onClick}>\n      Edit\n    </button>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePreviewClick = this.handlePreviewClick.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.state = { isFinished: false };\n  }\n  handlePreviewClick() {\n    this.setState({ isFinished: true });\n  }\n  handleEditClick() {\n    this.setState({ isFinished: false });\n  }\n  render() {\n    const isFinished = this.state.isFinished;\n    let button;\n    if (isFinished) {\n      button = <EditButton onClick={this.handleEditClick} />;\n    } else {\n      button = <PreviewButton onClick={this.handlePreviewClick} />;\n    }\n    return (\n      <div>\n        <Display isFinished={isFinished} />\n        <div className=\"prevBtn\">{button}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}